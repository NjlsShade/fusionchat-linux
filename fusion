#FusionChat Linux v0.0.11
#By NjlsShade

#Static Variables------------------------------------------------
WIDTH=1000
HEIGHT=1000
#START=${1:-"start"}
ICON=fox.jpg
SERVER="http://192.168.43.131:8000"
DEBUGSERVER=0
VERSION=0.0.11
HISTFILE=shell/fuse_history
#Colors-----------------------
WHITE="\033[1m"
LIGHTRED="\033[1;31m"
RED="\033[31m"
YELLOW="\033[1;33m"
BLUE="\033[34m"
BLUEB="\033[1;34m"
GREEN="\033[32m"
GREENB="\033[1;32m"
ENDCOLOR="\033[0m"
#-----------------------------
#---------------------------------------------------------------
#Static Variable application--------------------------------------
if ! [ $DEBUGSERVER = 0 ]; then
	_debug="--proxy $DEBUGSERVER"
fi
#---------------------------------------------------------------
#Functions-------------------------------------------------------
function rebase {
	d1=Hidden
	d2=Male
	d3=Female
	d4=Custom
}
function jumpto {
	if [ -e exit ]; then
		cd ..
	fi
	__label=$1
	__cmd=$(sed -n "/$__label:/{:a;n;p;ba};" $0 | grep -v ':$')
	eval "$__cmd"
	exit
}
function register {
	#Register Variables----------------------------------------------
	__regmail=0
	__regpass=0
	__emailstat="Email - <span color='#00FF00'>OK</span>"
	__passstat="Password - <span color='#00FF00'>OK</span>"
	__pass2stat="Confirm Password - <span color='#00FF00'>OK</span>"
	__namestat="Display Name - <span color='#00FF00'>OK</span>"
	__regname=0
	__regcpass=
	#Rebase error fields------------
	__err0=
	__err1=
	__err2=
	__err3=
	__err0e=
	__err1e=
	__err2e=
	__err3e=
	#-------------------------------
	__rmail=
	__rpass=
	__rname=
	__rgen=

	__emaillag=
	__emailcheck=
	__passcheck=
	__pass2grab=
	__pass2check=
	#---------------------------------------------------------------
	#Email Check----------------------------------------------------
	__rmail=`echo $_reginfo | awk -F "|" '{print $1}'`
	if ! [ -z "$__rmail" ]; then
		__emaillag=`echo ${#__rmail}`
		if [[ __emaillag -ge 5 ]]; then
			__emailcheck=`case $__rmail in *?@*.?*) echo 1; esac`
			if ! [ "$__emailcheck" = "1" ]; then
				__err0="<span color='#FF0000'>"
				__err0e="</span>"
				__emailstat="Email - <span color='#FF0000'>The Email given is not formatted properly</span>"
			else
				__regmail=1
			fi
		else
			__err0="<span color='#FF0000'>"
			__err0e="</span>"
			__rmail=`echo $_reginfo | awk -F "|" '{print $1}'`
			__emailstat="Email - <span color='#FF0000'>The Email given is less then five characters long</span>"
		fi
	else
		__err0="<span color='#FF0000'>"
		__err0e="</span>"
		__emailstat="Email - <span color='#FF0000'>No Email was given</span>"
	fi
	#---------------------------------------------------------------
	#Password Check-------------------------------------------------
	__rpass=`echo $_reginfo | awk -F "|" '{print $2}'`
	if [ -n "$__rpass" ]; then
		__passcheck=`echo ${#__rpass}`
		if ! [[ __passcheck -ge 8 ]]; then
			__err1="<span color='#FF0000'>"
			__err1e="</span>"
			__passstat="Password - <span color='#FF0000'>The password given is less then eight characters long</span>"
		else
			__regpass=1
		fi
	else
		__err1="<span color='#FF0000'>"
		__err1e="</span>"
		__passstat="Password - <span color='#FF0000'>No password was given</span>"
	fi
	__pass2grab=`echo $_reginfo | awk -F "|" '{print $5}'`
	__pass2check=`echo ${#__pass2grab}`
	if [ -n "$__pass2grab" ]; then
		if ! [ "$__pass2grab" = "$__rpass" ]; then
			__err2="<span color='#FF0000'>"
			__err2e="</span>"
			__pass2stat="Confrim Password - <span color='#FF0000'>Passwords do not match</span>"
		else
				__regcpass=1
		fi
	else
		__err2="<span color='#FF0000'>"
		__err2e="</span>"
		__pass2stat="Confrim Password - <span color='#FF0000'>No password was given</span>"
	fi
	#---------------------------------------------------------------
	#Username Check-------------------------------------------------
	__rname=`echo $_reginfo | awk -F "|" '{print $3}'`
	if [ -z "$__rname" ]; then
		__err3="<span color='#FF0000'>"
		__err3e="</span>"
		__namestat="Display Name - <span color='#FF0000'>No Display Name was given</span>"
	else
		__regname=1
	fi
	#---------------------------------------------------------------
	#Gender Formate-------------------------------------------------
	__rgen=`echo $_reginfo | awk -F "|" '{print $6}'`
	echo $__rgen
	case $__rgen in
		Custom)
			__rgen=3
			rebase
			d4=^Custom
		;;
		Female)
			__rgen=2
			rebase
			d3=^Female
		;;
		Male)
			__rgen=1
			rebase
			d2=^Male
		;;
		*)
			__rgen=0
			rebase
			d1=^Hidden
		;;
	esac
	#---------------------------------------------------------------
	#API------------------------------------------------------------
	#EMAIL-----------------------
	if [ "$__regmail" = "1" ]; then
		#Password-----------------------
		if [ "$__regpass" = "1" ]; then
			if [ "$__regcpass" = "1" ]; then
				#Username-----------------------
				if [ "$__regname" = "1" ]; then
					#CALL---------------------------
					( echo 50
						__regrun=$(
							curl -s -m 4 $_debug \
							--data-urlencode "register=$__rmail" \
							--data-urlencode "pass=$__rpass" \
							--data-urlencode "displayname=$__rname" \
							--data-urlencode "gender=$__rgen" \
							--data-urlencode "lang=en" \
							"$SERVER/api.php"
						)
						echo 90

						if [ "$__regrun" = "1" ]; then
							echo temp
						else
							yad --title="Notice!" \
							--on-top \
							--width="256" \
							--height="128" \
							--center \
							--window-icon="$ICON" \
							--fixed \
							--text-align="center" \
							--text="The Fusion server could not be reached." \
							--buttons-layout="center" \
							--button="OK":0 \
							&
							echo 100
						fi
					) | yad --title="Registering..." \
					--width=150 \
					--center \
					--window-icon="$ICON" \
					--progress \
					--auto-close \
					--text="Registering..." \
					--undecorated \
					--no-buttons
					jumpto register
					#-------------------------------
				fi
				#-------------------------------
			fi
		fi
		#-------------------------------
	fi
	#-------------------------------
	yad --title="Notice!" \
	--on-top \
	--width="400" \
	--height="164" \
	--center \
	--window-icon="$ICON" \
	--fixed \
	--text-align="center" \
	--text="Some of the provided information was incorrect." \
	--list \
	--no-headers \
	--column="" \
	--no-selection \
	--buttons-layout="center" \
	--button="OK":0 \
	"$__emailstat" "$__passstat" "$__pass2stat" "$__namestat" \
	&
	jumpto register
	#-------------------------------
}
function login {
	#Variables-------------------------------------------------------
	__lmail=
	__lpass=
	__sesid=
	__sesidnum=
	#---------------------------------------------------------------
	#Login Grab-----------------------------------------------------
	__lmail=`echo $_loginfo | awk -F "|" '{print $1}'`
	__lpass=`echo $_loginfo | awk -F "|" '{print $2}'`
	#---------------------------------------------------------------
	#Email Check----------------------------------------------------
	if ! [ -z "$__lmail" ]; then
		__emaillag=`echo ${#__rmail}`
		if [[ __emaillag -ge 5 ]]; then
			__emailcheck=`case $__lmail in *?@*.?*) echo 1; esac`
			if ! [ "$__emailcheck" = "1" ]; then
				__logerr0="<span color='#FF0000'>"
				__logerr0e="</span>"
				__logemailstat="Email - <span color='#FF0000'>The Email given is not formatted properly</span>"
			else
				__logmail=1
			fi
		else
			__logerr0="<span color='#FF0000'>"
			__logerr0e="</span>"
			__lmail=`echo $_loginfo | awk -F "|" '{print $1}'`
			__logemailstat="Email - <span color='#FF0000'>The Email given is less then five characters long</span>"
		fi
	else
		__logerr0="<span color='#FF0000'>"
		__logerr0e="</span>"
		__logemailstat="Email - <span color='#FF0000'>No Email was given</span>"
	fi
	#---------------------------------------------------------------
	#Password Check-------------------------------------------------

	#---------------------------------------------------------------
	( echo 50
		__sesid=$(
			curl -s -m 4 $_debug \
			--data-urlencode login=$__lmail \
			--data-urlencode pass=$__lpass \
			$SERVER/api.php
		)
		echo 90

		__sesidnum=`echo ${#__sesid}`
		echo $__sesidnum
		if [ "$__sesidnum" = "128" ]; then
			jumpto main
		else
			yad --title="Notice!" \
			--on-top \
			--width="256" \
			--height="128" \
			--center \
			--window-icon="$ICON" \
			--fixed \
			--text-align="center" \
			--text="The Fusion server could not be reached." \
			--buttons-layout="center" \
			--button="OK":0 \
			&
			echo 100
		fi
	) | yad --title="Registering..." \
	--width=150 \
	--center \
	--window-icon="$ICON" \
	--progress \
	--auto-close \
	--text="Registering..." \
	--undecorated \
	--no-buttons
	jumpto login

}
function hiscall {
	cd ../../
	echo "$ANS" | awk '{print $1}' >> shell/fuse_history
	history -a
	history -c
	history -r
}
function config {
	ICON=$(cat config/var.ns)
}
#---------------------------------------------------------------
#PRE Fusion-----------------------------------------------------
#Call Base Varibles------------
rebase
#------------------------------
#Call config-------------------
config
#------------------------------
#---------------------------------------------------------------
if [[ "$1" = "--cmd" ]] || [[ "$1" = "-c" ]]; then
	_shell=1
	jumpto shell
fi
#Start Page-----------------------------------------------------
start:
yad --title="FusionChat" \
--width="512" \
--height="256" \
--center \
--window-icon="$ICON" \
--fixed \
--text-align="center" \
--text="<span color='#000000' size='32000'>FusionChat</span>" \
--buttons-layout="center" \
--button="Login":2 \
--button="New Account":3

_ans1=$?

case $_ans1 in
	3)
		jumpto register
	;;
	2)
		jumpto login
	;;
	252)
		exit
	;;
esac
#---------------------------------------------------------------
#Sign Up--------------------------------------------------------
#Varibles---------------------
_reginfo=
#-------------------------------
register:
_reginfo=$(
	yad --title="FusionChat - Register" \
	--width="128" \
	--height="200" \
	--center \
	--window-icon="$ICON" \
	--fixed \
	--form --text="Sign Up" --columns=2 \
	--field="$__err0 Email&#58; $__err0e" \
	--field="$__err1 Password&#58; $__err1e":H \
	--field="$__err3 Display Name&#58; $__err3e" \
	--field=" ":LBL \
	--field="$__err2 Confirm Password&#58; $__err2e":H \
	--field=" Gender&#58; ":CB \
	--button="Back":4 \
	--button="Register":0 \
	"$__rmail" "" "$__rname" "" "" "$d1!$d2!$d3!$d4"
)

_ans2=$?
case $_ans2 in
	4)
		echo yeah
		jumpto start
	;;
	0)
		register
	;;
	252)
		exit
	;;
esac
#---------------------------------------------------------------
#Login----------------------------------------------------------
login:
_loginfo=$(
	yad --title="FusionChat - Login" \
	--width=360 \
	--height=128 \
	--center \
	--window-icon="$ICON" \
	--fixed \
	--form --text="Login" \
	--field=" Email&#58; " \
	--field=" Password&#58; ":H \
	--button="Back":4 \
	--button="Login":0 \
	"$__lmail" ""
)

_ans3=$?

case $_ans3 in
	0)
		login
	;;
	4)
		jumpto start
	;;
	252)
		exit
	;;
esac
#Main-----------------------------------------------------------
main:
_maininfo=$(
	yad --title="FusionChat - Main" \
	--window-icon="$ICON" \
	--width=512 \
	--height=256 \
	--center \
	--fixed \
	--text="YAY! You are in FusionChat!" \
	--buttons-layout="spread" \
	--button="Logout":0 \
	--button="Logout2":0
)

_ans4=$?

case $_ans4 in
	0)
		curl -s -m 4 \
		--data-urlencode logout=$__sesid \
		"$SERVER/api.php"
		jumpto start
	;;
	252)
		exit
	;;
esac
#---------------------------------------------------------------
#---------------------------------------------------------------
#Error Codes----------------------------------------------------

#---------------------------------------------------------------
#FusionShell----------------------------------------------------
shell:
if [ "$_shell" = "1" ]; then
	echo "" > shell/fuse_history
	history -c
	history -r
	clear
	echo -e $BLUE"Fusion Shell v0.0.1"$ENDCOLOR
	echo -e "The Fusion Shell allows you to manually invoke commands and set configurations"
	echo
	echo
	echo -e "Type$GREENB help$ENDCOLOR for a list of possible commands"
	echo
	echo -e "Type$GREENB exit$ENDCOLOR to leave Fusion Shell"
	echo
	prompt:
	cd shell/bin
	read -e -r -p $'\033[1;34m>>\033[0m ' ANS
	case $ANS in
		echo*)
			hiscall
			echo "$ANS" | cut -d' ' -f2-
			jumpto prompt
		;;
		version-chat)
			hiscall
			echo -e "FusionChat ------------>$BLUE v$VERSION$ENDCOLOR"
			jumpto prompt
		;;
		version-shell)
			hiscall
			echo -e "Fusion Shell ---------->$BLUE v0.0.1$ENDCOLOR"
			jumpto prompt
		;;
		version-api)
			hiscall
			echo -e "FusionChat API -------->$BLUE v1.0$ENDCOLOR"
			jumpto prompt
		;;
		version)
			hiscall
			echo -e "FusionChat ------------>$BLUE v$VERSION$ENDCOLOR"
			echo -e "Fusion Shell ---------->$BLUE v0.0.1$ENDCOLOR"
			echo -e "FusionChat API -------->$BLUE v1.0$ENDCOLOR"
			jumpto prompt
		;;
		launch)
			cd ../../
			clear
			jumpto start
		;;
		set-icon*)
			hiscall
			if [[ "$ANS" = set-icon\ ?* ]];then
				_con=$(echo "$ANS" | cut -d' ' -f2-)
			else
				echo not yet woof!
				jumpto prompt
			fi
			echo "$_con" > config/var.ns
			ICON=$_con
			echo Changed the icon to $_con
			jumpto prompt
		;;
		help)
			hiscall
			echo -e "Good Stuff"
			jumpto prompt
		;;
		exit | quit | q)
			clear
			exit
		;;
		*?*)
			hiscall
			echo "$ANS: is not a valid command"
			jumpto prompt
		;;
		*)
			cd ../../
			jumpto prompt
		;;
	esac
fi
#---------------------------------------------------------------
